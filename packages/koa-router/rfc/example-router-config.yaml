options:                            # optional
  middlewarePath: ./middleware      # default "middleware" if exists
  controllerPath: ./controller      # default "controller" if exists

middleware:
  is_auth: is-auth.middleware      # название файла в папке указанной в "options.middleware"
  is_guest: is-not-auth.middleware
  is_admin: is-admin.middleware::checkAdmin

routes:
  # simplest example with required params
  - name: BlogList
    path: /blog
    controller: blog::getArticleList # path to file ./controller/blog.ts"

  - name: ShowBlogItem            # alias, available via "ctx.router.name"
    prefix: /blog
    path: /:id                    # => /blog/:id   - since there is a prefix
    controller: blog::getArticle  # In the package from "options.controllers" in the "blog.ts " using the "getArticle" function `export const getArticle =(...) => {...}`
    methods: GET|HEAD             # default all 'GET', 'HEAD', 'PUT', 'DELETE', 'OPTIONS', 'TRACE'
    middleware:
      - is_guest
      - is_auth
      - is_admin
    requirements:
      id: '\d+'                    # правила валидации, для итогового пути (/blog/:id)
    response:
      header: text/html
      status: 200

  - name: StaticFiles
    path: /
    static: ./public

  - name: StaticFilesToDownload
    path: /download
    static: ./download-files
    download: true

